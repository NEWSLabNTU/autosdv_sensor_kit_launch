<launch>
  <arg name="launch_driver" default="true"/>
  <arg name="lidar_model" default="vlp32c" description="cube1, robin-w, or vlp32c"/>
  <!-- <arg name="host_ip" default="192.168.26.1"/> -->
  <arg name="use_concat_filter" default="true"/>
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)"/>
  <arg name="vehicle_mirror_param_file"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>
  <arg name="robin_w_device_ip" default="172.168.1.10"/>
  <arg name="vlp32c_device_ip" default="192.168.7.10"/>

  <group>
    <push-ros-namespace namespace="lidar"/>

    <group>
      <group if="$(eval &quot;'$(var lidar_model)'=='cube1'&quot;)">
	<include file="$(find-pkg-share blickfeld_driver)/launch/live_scanner_component.launch.py" if="$(var launch_driver)">
	</include>
      </group>

      <group if="$(eval &quot;'$(var lidar_model)'=='robin-w'&quot;)">
	<include file="$(find-pkg-share autosdv_sensor_kit_launch)/launch/ivu_pc2.py" if="$(var launch_driver)">
          <arg name="device_ip" value="$(var robin_w_device_ip)"/>
	</include>
      </group>

      <group if="$(eval &quot;'$(var lidar_model)'=='vlp32c'&quot;)">
        <include file="$(find-pkg-share common_sensor_launch)/launch/nebula_node_container.launch.py">
          <arg name="launch_driver" value="$(var launch_driver)"/>
          <arg name="sensor_model" value="VLP32"/>
          <arg name="max_range" value="130.0"/>
          <arg name="min_range" value="0.4"/>
          <arg name="sensor_frame" value="velodyne"/>
          <arg name="return_mode" value="SingleStrongest"/>
          <arg name="sensor_ip" value="$(var vlp32c_device_ip)"/>
          <arg name="host_ip" value="255.255.255.255"/>
          <arg name="data_port" value="2368"/>
          <arg name="scan_phase" value="0.0"/>
          <arg name="cloud_min_angle" value="0"/>
          <arg name="cloud_max_angle" value="360"/>
          <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
          <arg name="container_name" value="$(var pointcloud_container_name)"/>
        </include>
      </group>
    </group>

    <include file="$(find-pkg-share autosdv_sensor_kit_launch)/launch/pointcloud_preprocessor.launch.py">
      <arg name="base_frame" value="base_link"/>
      <arg name="use_intra_process" value="true"/>
      <arg name="use_multithread" value="true"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>
</launch>
